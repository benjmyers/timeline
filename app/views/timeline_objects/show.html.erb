<!-- <link rel="stylesheet" href="../assets/style.css" /> -->
<%= javascript_include_tag :defaults, "jquery-1.7.1.min", "jquery.isotope.min" %>

<div class="maincontainer pattern-background">
  <div class="offset">
<div class="timelineindexheader span12 offset2">
  <div class="timelinethumb span2">
    <%= image_tag @timeline_object.image.url(:thumb) %>
  </div>
  <div class="displaytimelinetitle span8">
    <p class="title">
      <%= @timeline_object.title %>
    </p>
    <p>
      <%= @timeline_object.description %>
    </p>
  </div>
</div>

<div class="isotopecontainer span12">
<% currentdate="none"%>
<div id="eventcontainer">
<!-- Go through each event (they are already ordered) and display -->
<% @timeline_object.get_events.each do |event| %>

  <%= render "events/event_partial", event: event %>


    <!-- Set up the popover with hidden modal. -->
    <div class="element other nonmetal large" data-symbol="Bi" data-category="post-transition">
      <p class="number"><%= event.title %></p>
      <div class = "symbol"><%= link_to(image_tag(event.image.url(:medium)), "##{event.id}", {:data => {:toggle => "modal"}}) %></div>
      <h2 class="name"><%= event.time %></h2>
      <p class="weight"><%= event.date %></p>

    </div>
<% end %>

</div>

  <script>
    $(function(){

      var $container = $('#eventcontainer');
      $container.imagesLoaded(function(){
        $container.isotope({
          layoutMode : 'spineAlign',
          spineAlign: {
              gutterWidth: 30
          },
          itemSelector : '.element',
  
      });
     });
      //   // add randomish size classes
      // $container.find('.element').each(function(){
      //   var $this = $(this),
      //       number = parseInt( $this.find('.number').text(), 10 );
      //   if ( number % 7 % 2 === 1 ) {
      //     $this.addClass('width2');
      //   }
      //   if ( number % 3 === 0 ) {
      //     $this.addClass('height2');
      //   }
      // });
    });
    // custom layout mode spineAlign
  $.Isotope.prototype._spineAlignReset = function() {
    this.spineAlign = {
      colA: 0,
      colB: 0
    };
  };

  $.Isotope.prototype._spineAlignLayout = function( $elems ) {
    var instance = this,
        props = this.spineAlign,
        gutterWidth = Math.round( this.options.spineAlign && this.options.spineAlign.gutterWidth ) || 0,
        centerX = Math.round(this.element.width() / 2);

    $elems.each(function(){
      var $this = $(this),
          isColA = props.colA <= props.colB,
          x = isColA ?
            centerX - ( $this.outerWidth(true) + gutterWidth / 2 ) : // left side
            centerX + gutterWidth / 2, // right side
          y = isColA ? props.colA : props.colB;
      instance._pushPosition( $this, x, y );
      props[( isColA ? 'colA' : 'colB' )] += $this.outerHeight(true);
    });
  };

  $.Isotope.prototype._spineAlignGetContainerSize = function() {
    var size = {};
    size.height = this.spineAlign[( this.spineAlign.colB > this.spineAlign.colA ? 'colB' : 'colA' )];
    return size;
  };

  $.Isotope.prototype._spineAlignResizeChanged = function() {
    return true;
  };
  </script>
</div>
<div class="eventnew span12">
    <div class="span5 offset9">
    <%= link_to "Add Event", new_event_path(:data => @timeline_object.id), class: "btn btn-custom btn-large btn-block" %>
    </div>
</div> 

</div>
</div>